# Generated by Django 3.1.3 on 2021-01-10 14:18

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('emp_main', '0003_auto_20201221_1329'),
        ('emp_evaluation_system', '0007_evaluationsystempage_description'),
    ]

    operations = [
        migrations.AddField(
            model_name='card',
            name='card_button_link',
            field=models.OneToOneField(default=None, help_text='On button click the page set here will be called.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='emp_evaluation_system.evaluationsystempage'),
        ),
        migrations.AlterField(
            model_name='card',
            name='card_color',
            field=models.CharField(choices=[('primary', 'primary'), ('secondary', 'secondary'), ('success', 'success'), ('warning', 'warning'), ('danger', 'danger')], default='primary', help_text='Allows configuring the color scheme of the card. ', max_length=10),
        ),
        migrations.AlterField(
            model_name='card',
            name='card_decoration',
            field=models.CharField(choices=[('none', 'none'), ('left', 'left'), ('bottom', 'bottom')], default='none', help_text='Allows configuring the decoration of the card. ', max_length=6),
        ),
        migrations.AlterField(
            model_name='card',
            name='card_has_tooltip',
            field=models.BooleanField(default=False, help_text='If checkt the card shows a tooltip providing your custom tooltip text. Use the tooltips to provide additional information.'),
        ),
        migrations.AlterField(
            model_name='card',
            name='card_is_button',
            field=models.BooleanField(default=False, help_text='If checkt the card can be used as button using the referenced link. With hover effects the card is made recognizable as button. Use cards as button to link additional information pages or function.'),
        ),
        migrations.AlterField(
            model_name='card',
            name='card_tooltip_text',
            field=models.TextField(blank=True, help_text='Provide the cards tooltip text here. It can have any length but have in mind noone likes reading massive tooltips.'),
        ),
        migrations.AlterField(
            model_name='evaluationsystempage',
            name='has_report_generation',
            field=models.BooleanField(default=False, help_text="If checked the 'create report' button in the top right corner of the page will be visible providing the possibility to generate a report out of pages data."),
        ),
        migrations.AlterField(
            model_name='evaluationsystempage',
            name='has_scroll_to_top_button',
            field=models.BooleanField(default=True, help_text="If checked the 'scroll top' button in the bottom right corner of the page will be visible providing the possibility scroll to the top of the page with one click."),
        ),
        migrations.AlterField(
            model_name='presentation',
            name='datapoint',
            field=models.ForeignKey(default=None, help_text='Choose the data point represented by this.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='emp_main.datapoint'),
        ),
        migrations.AlterField(
            model_name='uielementcontainer',
            name='container_dropdown_links',
            field=models.ManyToManyField(blank=True, help_text='Choose the pages linked in the dropdown here.', to='emp_evaluation_system.EvaluationSystemPage'),
        ),
        migrations.AlterField(
            model_name='uielementcontainer',
            name='container_has_dropdown',
            field=models.BooleanField(default=False, help_text='If checked the referenced dropdown linkes will be shown as a dropdown menu in the top right corner of the containers header. Use the dropdown menu to provide less important functionality in relation to containers data.'),
        ),
        migrations.AlterField(
            model_name='uielementcontainer',
            name='container_has_title',
            field=models.BooleanField(default=False, help_text='If checked the containers title will be visible in its header. Use short and describing titles to guide the user. '),
        ),
        migrations.AlterField(
            model_name='uielementcontainer',
            name='container_title',
            field=models.CharField(help_text="The containers title as displaied in the containers header. Only visible if 'has_title' is checked. ", max_length=64),
        ),
    ]
