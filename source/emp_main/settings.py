"""
Django settings for emp_main project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'm^mi03=jg0&i=d#zh#8=t0*_+17ryt)e7nw+)-1if79u-gj&g6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition
INSTALLED_APPS = [
    'channels',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'guardian',
    'rest_framework',
    'drf_spectacular',
    'emp_main.apps.EmpMainConfig',
    'emp_demo_ui_app.apps.EmpDemoUiAppConfig',
    'emp_demo_dp_interface.apps.EmpDemoDpInterfaceConfig',
    'emp_django_authenticator.apps.EmpDjangoAuthenticatorConfig',
    'emp_history_db.apps.EmpHistoryDbConfig'
]

REST_FRAMEWORK = {
    # YOUR SETTINGS
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

# Define all installed apps which extend the EMP functionality.
# This is used to automatically wire up the urls to these apps and to
# automatically generate the user permissions for these apps.
# This process expects that each app holds a apps.py and urls.py file following
# the conventions shown in emp_demo_ui_app.
EMP_APPS = [
    "emp_demo_ui_app",
    "emp_demo_dp_interface",
    "emp_django_authenticator",
    "emp_history_db",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend', # this is django default.
    'guardian.backends.ObjectPermissionBackend', # this is required for guardian.
)

ROOT_URLCONF = 'emp_main.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'emp_main.wsgi.application'
ASGI_APPLICATION = 'emp_main.asgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Logging inspired by suggestions in practical django book.
# This configures one explicit logger per app, as this allows us
# to identify the source of a log message easily.
log_level = 'INFO'
if DEBUG:
    log_level = 'DEBUG'

loggers = {}
# Explicitly add emp_main, as log messages from it won't be displayed else.
for emp_app in EMP_APPS + ["emp_main", ]:
    loggers[emp_app] = {
        'handlers': ['console'],
        'level': log_level,
        'propagate': True,
    }

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'simple': {
            'format': '%(asctime)s-%(name)s-%(levelname)s: %(message)s'
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
    },
    'loggers': loggers
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

# Don't place media files in source folder but next to it.
MEDIA_ROOT = BASE_DIR.parent / "media"
MEDIA_URL ="/media/"

# ------------------------------------------------------------------------------
# Here the EMP specific settings.
# ------------------------------------------------------------------------------

# The string for the <title> tag.
PAGE_TITLE = "EMP Demo"

# The path to the manifest.json file within the static files.
MANIFEST_JSON_STATIC = "emp-main/manifest.json"

# The path to the favicon.ico file within the static files.
FAVICON_ICO_STATIC = "emp-main/icons/favicon.ico"

# The path to the logo displayed in the left corner of the top nav bar,
# as usual within static files.
TOPBAR_LOGO_STATIC  = "emp-main/icons/title-logo.png"

# Strings to display in the top navbar.
TOPBAR_NAME_SHORT = "EMP"
TOPBAR_NAME_LONG = "Energy Management Panel"

# A list of URLS that are excluded from permission checking, i.e. that can be
# accessed by any user at all times. This is required to allow access to pages
# generic pages like login/logout or the home page, if those are not part of
# an UI app.
URLS_PERMISSION_WHITELIST = [
    "/welcome/",
    "/auth/login/",
    "/auth/logout/",
]

# Users will be redirected to this page if visiting the sites root.
HOME_PAGE_URL = "/welcome/"

# Defines the URLS that are placed in the login/logout buttons in the
# EMPBaseView. Use ?next= to redirect after login/logout.
LOGIN_PAGE_URL = "/auth/login/?next=%s" % HOME_PAGE_URL
LOGOUT_PAGE_URL = "/auth/logout/?next=%s" % HOME_PAGE_URL
